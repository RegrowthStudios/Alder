# Handles the generation of audit equivalents for database row and table files.
# TODO(Matthew): Implement generateAuditFiles handling of construction in table files with audit row representation and name.

import glob
import os

def clearOldAuditFiles():
  # Clears all the old audit files ready for new ones.
  for filename in glob.glob(".\\**\\*Audit.php", recursive=True):
    os.remove(filename)

def generateAuditFiles(dir, classCommentBlock, extraContent):
  for filename in glob.glob(".\\" + dir + "\\*.php"):
    classname = ".".join(os.path.basename(filename).split(".")[:-1])
    extInd = filename.find(".php")
    auditFilename = filename[:extInd] + "Audit" + filename[extInd:]
    
    file = open(filename, "r")
    auditFile = open(auditFilename, "w")
    
    depth = 0
    inCommentBlock = False
    classEntered = False
    for line in file.readlines():
      strippedLine = line.strip()
      if strippedLine.startswith("*/") and not classEntered:
        inCommentBlock = False
        continue
      elif strippedLine.startswith("/**") and not classEntered:
        inCommentBlock = True
        auditFile.write(classCommentBlock)
      if inCommentBlock:
        continue
      if strippedLine.startswith("class"):
        classEntered = True
        line = "    class " + classname + "Audit extends Abstract" + dir + "\n"
      elif strippedLine.startswith("{"):
        depth += 1
      elif strippedLine.startswith("}"):
        depth -= 1
        if depth == 0:
          auditFile.write(extraContent)
      auditFile.write(line)
    file.close()
    auditFile.close()
      
cwd = os.getcwd()
os.chdir(os.path.abspath("src\Alder\PublicAuthentication\Db"))

clearOldAuditFiles()

generateAuditFiles("Row", "    /**\n     * Autogenerated row representation of an audit table record.\n     * \n     * @author FILL_IN\n     * @copyright 2016, Regrowth Studios Ltd. All Rights Reserved\n     * @since X.Y.Z\n     */\n", "        public $editor_id;\n        public $editor_ip;\n        public $editor_action;\n        public $last_etag;\n")

generateAuditFiles("Table", "    /**\n     * Autogenerated table gateway for an audit table.\n     * \n     * @author FILL_IN\n     * @copyright 2016, Regrowth Studios Ltd. All Rights Reserved\n     * @since X.Y.Z\n     */\n", "")

os.chdir(cwd)